{# =========================================================== Form Start and End ===========================================================#}
{%- block form_start -%}
    {%- if not form.vars.disabled -%}
    	{%- set blocks = form|all_widget_type -%}
    	
    	{% if 'money' in blocks %}
        	<script src="{{ asset(quick_coding.public ~ 'plugins/inputmask/jquery.inputmask.min.js') }}"></script>
    	{% endif %}
    	
    	{% if 'datepicker' in blocks or 'timepicker' in blocks or 'datetimepicker' in blocks %}
        	<link rel="stylesheet" href="{{ asset(quick_coding.public ~ 'plugins/flatpickr/flatpickr.min.css') }}" />
        	<!--[if IE 9]><link rel="stylesheet" href="{{ asset(quick_coding.public ~ 'plugins/flatpickr/ie.css') }}" /><![endif]-->
        	<script src="{{ asset(quick_coding.public ~ 'plugins/flatpickr/flatpickr.min.js') }}"></script>
    	{% endif %}
    	
    	{% if 'google_autocomplete' in blocks %}
        	<script src="https://maps.googleapis.com/maps/api/js?key={{ gmaps_key }}&libraries=places&language="></script>
    	{% endif %}
    	
        {% if 'choice' in blocks or 'entity' in blocks %}
        	<link rel="stylesheet" href="{{ asset(quick_coding.public ~ 'plugins/selectize/css/selectize.css') }}" />
        	<!--[if IE 8]><script src="{{ asset(quick_coding.public ~ 'plugins/selectize/js/es5.js') }}"></script><![endif]-->
        	<script src="{{ asset(quick_coding.public ~ 'plugins/selectize/js/jquery-ui_sortable.min.js') }}"></script>
    	    <script src="{{ asset(quick_coding.public ~ 'plugins/selectize/js/standalone/selectize.min.js') }}"></script>
    	{% endif %}
    	
    	{% if 'richtext' in blocks %}
        	<script src="{{ asset(quick_coding.public ~ 'plugins/tinymce/tinymce.min.js') }}"></script>
    	{% endif %}
    	
    	{%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' uk-form-horizontal')|trim }) -%}
        {%- do form.setMethodRendered() -%}
        {% set method = method|upper %}
        {%- if method in ["GET", "POST"] -%}
            {% set form_method = method %}
        {%- else -%}
            {% set form_method = "POST" %}
        {%- endif -%}
	{%- endif -%}
    	<div class="uk-card uk-card-default uk-border-rounded">
        	<div class="uk-card-header uk-border-rounded">
        		<h3><b>{{ config.title|default('Form') }}</b></h3>
        	</div>
        	<div class="uk-card-body">
	{%- if not form.vars.disabled -%}
                <form{% if name != '' %} 
                	name="{{ name }}" id="{{ name }}"{% endif %} method="{{ form_method|lower }}"{% if action != '' %} action="{{ action }}"{% endif %}
                	{% for attrname, attrvalue in attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}{% if multipart %} enctype="multipart/form-data"{% endif %} onsubmit="__ajaxLoading.show()">
                {%- if form_method != method -%}
                    <input type="hidden" name="_method" value="{{ method }}" />
                {%- endif -%}
	{%- else -%}
				<form class="uk-form-horizontal">
	{%- endif -%}
{%- endblock form_start -%}

{%- block form_end -%}
            {%- if not render_rest is defined or render_rest -%}
                {{ form_rest(form) }}
            {%- endif -%}
                <button type="submit" style="display:none">system_submit_button</button>
            </form>
        </div>
    </div>
    
    {%- if not form.vars.disabled -%}
        {%- set blocks = form|all_widget_type -%}
    	
        {% if 'money' in blocks %}
        	<script>
        	$('.qc-money-inputmask').inputmask();
        	</script>
    	{% endif %}
    	
    	{% if 'datepicker' in blocks %}
    	    <script>$(".flatpickr-datepicker").flatpickr({allowInput:true});</script>
    	{% endif %}	
    	
    	{% if 'timepicker' in blocks %}
    	    <script>$(".flatpickr-timepicker").flatpickr({enableTime: true, noCalendar: true, dateFormat: "H:i", time_24hr:true, allowInput:true});</script>
    	{% endif %}
    	
    	{% if 'datetimepicker' in blocks %}
    	    <script>$(".flatpickr-datetimepicker").flatpickr({enableTime: true, time_24hr:true, allowInput:true});</script>
    	{% endif %}
    	
    	{% if 'choice' in blocks or 'entity' in blocks %}
    	    <script>$('select').selectize({plugins: ['remove_button', 'drag_drop'], sortField: 'text', selectOnTab:true});</script>
    	{% endif %}
    	
    	{% if 'richtext' in blocks %}
    	    <script>
    	    tinymce.init({
    		    selector: '.tinymce-texteditor', menubar: false, plugins : 'lists', height: 300,
    		    toolbar: ['formatselect | bold italic underline strikethrough | subscript superscript | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent'],
    		    setup: function (editor) {
    		        editor.on('change', function (e) {
    		            editor.save();
    		        });
    		    }
    	    })
    	    </script>
    	{% endif %}
    	
    	{% if 'imageupload' in blocks %}
    	    <script>
    	    $(".widget-image-upload .uk-form-custom input[type='file']").on('change', function(event){
        	    var input = this;
        	    var parent = $(this).parent().parent();
        	    var elInvalidMsg = parent.find('.uk-alert-danger.uk-alert');
				var reader = new FileReader();
				var invalidMsg = '<div class="uk-alert-danger" uk-alert><a class="uk-alert-close" uk-close></a><p>Invalid image type! Please select image type jpg or png.</p></div>';
				var type = this.files[0].type.split("/")[0];

				if(elInvalidMsg) elInvalidMsg.remove();
				
				if(type != 'image'){
					$(this).val(null);
					parent.append(invalidMsg);
					return false;
				}
				
			    reader.onload = function(e) {$(input).parent().parent().find('img').attr('src', e.target.result)}
			    reader.readAsDataURL(this.files[0]);
    	    });
    	    </script>
    	{% endif %}
    	
    	{% if 'multifile' in blocks %}
    	    <script>
    	    $("input[type='file'].multifile").on('change', function(event){
        	    var type = event.currentTarget.dataset.type;
        	    var allow = type == "image" ? ["image"] : ($(this).attr('allow') ? $(this).attr('allow').split(",") : []);
				var target = $(this).parent().parent().find('.target-multifile');
				var clone = $(this).clone();
			    clone.attr('id', null);

			    var file = this.files[0];
			    var size = qc.bytesToSize(file.size);
			    var ftype = file.type.split("/")[0];

			    if(allow.length && allow.indexOf(ftype) < 0){
					target.append('<div class="uk-alert-danger" uk-alert><a class="uk-alert-close" uk-close></a><p>Only "' + allow.join(",") + '" files are allowed</p></div>');
				}else{
					switch(type){
    					case "image":
    						var reader = new FileReader();
    						
    						var item = $('<div class="container-multifile-image"></div>').appendTo(target);
    						var image = $('<img>').appendTo(item);

    						reader.onload = function(e) {image.attr('src', e.target.result)}
    					    reader.readAsDataURL(file);
    						break;
    					default:
    						var item = $('<span class="uk-badge">' + file.name + ' (' + size + ')</span>').appendTo(target);
    						break;
    				}
					
				    var btnDelete = $('<span uk-icon="minus-circle"></span>').appendTo(item);

					item.append(clone);
					btnDelete.on('click', function(){item.remove()});	
				}
				
			    $(this).val(null);
    	    })
    	    
    	    $(".container-multifile-image span, .multifile-remote span").click(function(event){
    	    	var el = $(this);
    	    	var file = el.parent().find('a');
    	    	
				switch(event.currentTarget.dataset.type){
					case "image":
						var fileName = file.find('img').attr('alt').replace(/^.*[\\\/]/, '');
						break;
					default:
						var fileName = file.html().replace(/^.*[\\\/]/, '');
						break;
				}
				
        	    UIkit.modal.confirm('Are you sure want to delete "' + (fileName.length > 30 ? fileName.substr(0, 30) + '...' : fileName) + '"?').then(function() {
        	    	$.ajax({
                        url: event.currentTarget.dataset.remove,
                        dataType: 'json',
                        success: function(response, data, header){
                            var msg = response && response.success ? 'Remove file succesful' : header.statusText;
                        	el.parent().parent().prepend('<div class="uk-alert-success" uk-alert><a class="uk-alert-close" uk-close></a><p>' + msg + '</p></div>');
                        	if(response.success)	el.parent().remove();
                        },
                        error: function(error){
                            el.parent().parent().prepend('<div class="uk-alert-danger" uk-alert><a class="uk-alert-close" uk-close></a><p>Remove file error : ' + error.statusText + '</p></div>')
                        }
            		});
        		}, function(){});
    	    })
    	    </script>
    	{% endif %}
    	
	{%- endif -%}
	
{%- endblock form_end -%}
{# =========================================================== Form Rows ===========================================================#}
{%- block form_row -%}
    {%- set widget_attr = {} -%}
    <div class="uk-margin">
        {{ form_label(form) }}
        <div class="uk-form-controls">
            {{- form_widget(form, widget_attr) -}}
            {%- if help is not empty -%}
            <span class="uk-text-small uk-text-muted uk-display-block qc-help">{{ help }}</span>
            {%- endif -%}
            {{- form_errors(form) -}}
        </div>
    </div>
{%- endblock form_row -%}

{# =========================================================== Form Errors ===========================================================#}
{% block form_errors -%}
    {%- if errors|length > 0 -%}
    	{%- for error in errors -%}
    		{%- if errors.form.parent -%}
            <span class="uk-text-small uk-text-danger uk-display-block">
                {{ error.message }}
        	</span>
        	{%- else -%}
        		<div class="uk-alert-danger" uk-alert>
                    <a class="uk-alert-close" uk-close></a>
                    <p>{{ error.message }}</p>
                </div>
        	{%- endif -%}
        {%- endfor -%}
    {%- endif -%}
{%- endblock form_errors %}

{# =========================================================== Form Label ===========================================================#}

{%- block form_label -%}
	{% set sub_prefixes = form.parent.vars.block_prefixes[form.parent.vars.block_prefixes|length - 2] %}
	{% if sub_prefixes != 'choice' %}
		{%- set label_attr = label_attr|merge({ 'class': (label_attr.class|default('') ~ ' uk-form-label')|trim }) -%}
	{% else %}
		{%- set label_attr = label_attr|merge({ 'class': (label_attr.class|default('') ~ ' custom-label')|trim }) -%}
	{% endif %}
    {% if label is not same as(false) -%}
        {% if not compound -%}
            {% set label_attr = label_attr|merge({'for': id}) %}
        {%- endif -%}
        {% if required -%}
        	{% if sub_prefixes != 'choice' %}
                {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
            {% endif %}
        {%- endif -%}
        {% if label is empty -%}
            {%- if label_format is not empty -%}
                {% set label = label_format|replace({
                    '%name%': name,
                    '%id%': id,
                }) %}
            {%- else -%}
                {% set label = name|humanize %}
            {%- endif -%}
        {%- endif -%}
        <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
            {%- if translation_domain is same as(false) -%}
                {{- label|raw -}}
            {%- else -%}
                {{- label|trans({}, translation_domain)|raw -}}
            {%- endif -%}
        </{{ element|default('label')|raw }}>
    {%- endif -%}
{%- endblock form_label -%}

{# =========================================================== Form Widget Simple ===========================================================#}
{%- block form_widget_simple -%}
	{%- if not form.parent.vars.disabled -%}
    	{%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' uk-input')|trim }) -%}
        {%- set type = type|default('text') -%}
        {%- if type == 'range' or type == 'color' -%}
            {%- set required = false -%}
        {%- endif -%}
        <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
    {%- else -%}
    	{% set blockName = form.vars.block_prefixes[(form.vars.block_prefixes|length) - 2] %}
    	{%- if blockName != "hidden" and blockName != "csrf_token" -%}
    		<p class="uk-textarea">{{ value }}</p>
    	{%- endif -%}
    {%- endif -%}
{%- endblock form_widget_simple -%}

{# =========================================================== Widget Textarea ===========================================================#}
{%- block textarea_widget -%}
    {%- if not form.parent.vars.disabled -%}
    	{%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' uk-textarea')|trim }) -%}
        <textarea {{ block('widget_attributes') }}>{{ value }}</textarea>
	{%- else -%}
    	<div class="uk-textarea">{{ (value|default('&nbsp'))|raw }}</div>
    {%- endif -%}
{%- endblock textarea_widget -%}

{# =========================================================== Form Widget Compound ===========================================================#}
{%- block form_widget_compound -%}
    <div {{ block('widget_container_attributes') }}>
        {%- if form is rootform -%}
            {{ form_errors(form) }}
        {%- endif -%}
        {{- block('form_rows') -}}
        {{- form_rest(form) -}}
    </div>
{%- endblock form_widget_compound -%}

{# =========================================================== Widget Button ===========================================================#}
{%- block button_widget -%}
	{%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' uk-button uk-button-primary uk-button-small uk-border-rounded')|trim }) -%}
    {%- if label is empty -%}
        {%- if label_format is not empty -%}
            {% set label = label_format|replace({
                '%name%': name,
                '%id%': id,
            }) %}
        {%- elseif label is same as(false) -%}
            {% set translation_domain = false %}
        {%- else -%}
            {% set label = name|humanize %}
        {%- endif -%}
    {%- endif -%}
    <button type="{{ type|default('button') }}" {{ block('button_attributes') }}>{{ translation_domain is same as(false) ? label : label|trans({}, translation_domain) }}</button>
{%- endblock button_widget -%}

{# =========================================================== Widget Choice ===========================================================#}
{%- block choice_widget -%}
    {% if expanded %}
        {{- block('choice_widget_expanded') -}}
    {% else %}
        {{- block('choice_widget_collapsed') -}}
    {% endif %}
{%- endblock choice_widget -%}

{%- block choice_widget_collapsed -%}
	{%- if not form.parent.vars.disabled -%}
    	{%- if placeholder is none -%}
            {% set placeholder = 'Select ' ~ (form.vars.label ? form.vars.label : form.vars.name|humanize) %}
        {%- endif -%}
        {%- if required and placeholder is none and not placeholder_in_choices and not multiple and (attr.size is not defined or attr.size <= 1) -%}
            {% set required = false %}
        {%- endif -%}
        <select {{ block('widget_attributes') }}{% if multiple %} multiple="multiple"{% endif %}>
            {%- if placeholder is not none -%}
                <option value=""{% if required and value is empty %} selected="selected"{% endif %}>{{ placeholder != '' ? (translation_domain is same as(false) ? placeholder : placeholder|trans({}, translation_domain)) }}</option>
            {%- endif -%}
            {%- if preferred_choices|length > 0 -%}
                {% set options = preferred_choices %}
                {{- block('choice_widget_options') -}}
                {%- if choices|length > 0 and separator is not none -%}
                    <option disabled="disabled">{{ separator }}</option>
                {%- endif -%}
            {%- endif -%}
            {%- set options = choices -%}
            {{- block('choice_widget_options') -}}
        </select>
	{%- else -%}
    	<p class="uk-textarea">
    		{% if multiple %}
    			{% for v in value %}
    				<span class="uk-label uk-label-success label-selectize">
    					{%- for choice in choices -%}{%- if choice.value == v -%}{{ choice.label }}{%- endif -%}{%- endfor -%}
        			</span>
    			{% endfor %}
    		{% else %}
    			{%- for choice in choices -%}{%- if choice.value == value -%}{{ choice.label }}{%- endif -%}{%- endfor -%}
    		{% endif %}
    	</p>
    {%- endif -%}
{%- endblock choice_widget_collapsed -%}

{# =========================================================== Widget Checkbox ===========================================================#}
{%- block checkbox_widget -%}
    {%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' uk-checkbox')|trim }) -%}
    <input type="checkbox" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
{%- endblock checkbox_widget -%}

{# =========================================================== Widget Radio ===========================================================#}
{%- block radio_widget -%}
	{%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' uk-radio')|trim }) -%}
    <input type="radio" {{ block('widget_attributes') }}{% if value is defined %} value="{{ value }}"{% endif %}{% if checked %} checked="checked"{% endif %} />
{%- endblock radio_widget -%}

{# =========================================================== Money Widget ===========================================================#}
{% block money_widget -%}
    {%- set inputmask = form.vars.inputmask|json_encode|raw -%}
	{%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' qc-money-inputmask')|trim }) -%}
	{%- set attr = attr|merge({ 'data-inputmask': inputmask[1:((inputmask| length) - 2)] }) -%}
    {{- block('form_widget_simple') -}}
{% endblock %}

{# =========================================================== File Widget ===========================================================#}

{% block file_widget -%}
	{%- set type = type|default('file') -%}
    <div class="uk-margin" uk-margin>
        <div uk-form-custom="target: true" class="uk-width-1-1">
            {{- block('form_widget_simple') -}}
            <input class="uk-input uk-input" type="text" placeholder="Select {{ form.vars.label ? form.vars.label : form.vars.name|humanize }}" disabled>
        </div>
    </div>
{% endblock %}

{# =========================================================== Imageupload Widget ===========================================================#}
{% block imageupload_widget -%}
	{%- set type = type|default('file') -%}
    <div class="widget-image-upload">
    	<div class="container-image-upload">
    		<img src="{{ asset(form.vars.data ? asset(form.vars.path) ~ '/' ~ form.vars.data : quick_coding.public ~ 'images/default-image.png') }}" onerror="this.src='{{ asset(quick_coding.public ~ 'images/default-image.png') }}'">
    	</div>
    	{%- if not form.parent.vars.disabled -%}
    	<div uk-form-custom>
            {{- block('form_widget_simple') -}}
            <button class="uk-button uk-button-default uk-button-small qc-button-upload" type="button" tabindex="-1"> <span uk-icon="icon: upload"></span> Select {{ form.vars.label ? form.vars.label : form.vars.name|humanize }}</button>
    	</div>
    	{%- endif -%}
    </div>
{% endblock %}

{# =========================================================== Multifile Widget ===========================================================#}
{% block multifile_widget -%}
	{%- set type = type|default('file') -%}
    {%- set attr = attr|merge({ multiple: false}) -%}
    {%- set attr = attr|merge({ class: ' multifile'}) -%}
    {%- set attr = attr|merge({ 'data-type': form.vars.file_type}) -%}
    <div class="uk-margin" uk-margin>
    	{%- if not form.parent.vars.disabled -%}
        <div class="js-upload" uk-form-custom>
            {{- block('form_widget_simple') -}}
            <button class="uk-button uk-button-default" type="button" tabindex="-1">Add {{ form.vars.label ? form.vars.label : form.vars.name|humanize }}</button>
        </div>
        {%- endif -%}
        <div class="target-multifile">
        	{% for data in form.vars.data %}
        	    {% set remove = data.remove is iterable ? (data.remove.path is defined ? path(data.remove.path, {id: data.remove.id}) : data.remove.url) : data.remove %}
        	    {%- if form.vars.file_type == 'image' -%}
    			<div class="container-multifile-image">
    				<a href="{{ asset(data.source) }}" target="_blank">
            			<img src="{{ asset(data.source) }}" alt="{{ data.name is defined ? data.name : data.source }}" onerror="this.src='{{ asset(quick_coding.public ~ 'images/default-image.png') }}'">
        			</a>
            		{%- if not form.parent.vars.disabled -%}
            		<span uk-icon="minus-circle" data-remove="{{ remove }}" data-type="{{ form.vars.file_type }}" class="uk-icon"></span>
            		{%- endif -%}
            	</div>
    			{%- else -%}
    			<span class="uk-badge multifile-remote">
            		<a href="{{ asset(data.source) }}" target="_blank">{{ data.name is defined ? data.name : data.source }}</a>
            		{%- if not form.parent.vars.disabled -%}
            		<span uk-icon="minus-circle" data-remove="{{ remove }}" data-type="{{ form.vars.file_type }}" class="uk-icon"></span>
            		{%- endif -%}
        		</span>
        		{%- endif -%}
        	{% endfor %}
        </div>
    </div>
{% endblock %}

{# =========================================================== Google Autocomplete Widget ===========================================================#}
{%- block google_autocomplete_widget -%}
	{%- if not form.parent.vars.disabled -%}
    	{%- set attr = attr|merge({ 'class': (attr.class|default('') ~ ' uk-input')|trim }) -%}
        {%- set type = type|default('text') -%}
        {%- if type == 'range' or type == 'color' -%}
            {%- set required = false -%}
        {%- endif -%}
        <input type="{{ type }}" {{ block('widget_attributes') }} {% if value is not empty %}value="{{ value }}" {% endif %}/>
        <script>
        	var options = {};
        	{%- if form.vars.country -%}
            options.componentRestrictions = {country: "{{ form.vars.country }}"};
            {%- endif -%}
			$(document).ready(function(){
				var autocomplete_{{ form.vars.id }} = new google.maps.places.Autocomplete(document.getElementById('{{ form.vars.id }}'), options);
				autocomplete_{{ form.vars.id }}.addListener('place_changed', function(){
					var place = autocomplete_{{ form.vars.id }}.getPlace();
					document.getElementById('{{ form.parent.vars.id ~ '_' ~ form.vars.lat }}').value = place.geometry.location.lat();
					document.getElementById('{{ form.parent.vars.id ~ '_' ~ form.vars.lng }}').value = place.geometry.location.lng();
				});	
			})
        </script>
    {%- else -%}
    	{%- if form.vars.name != "_token" -%}
    		<p class="uk-textarea">{{ value }}</p>
    	{%- endif -%}
    {%- endif -%}
{%- endblock google_autocomplete_widget -%}